generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DB_URL")
}

model User {
  id                 Int                     @id @default(autoincrement())
  name               String
  email              String                  @unique
  dateOfBirth        String?
  age                Int?
  gender             Int?                    @default(1)
  phoneNumber        String?                 @unique
  points             Int?                    @default(0)
  defaultedPoints    Int?                    @default(0)
  totalPoints        Int?                    @default(0)
  profilePicture     String?
  bussinessType      String?
  companyCode        String?
  address            String?
  city               String?
  state              String?
  country            String?
  mobileNumber       String?                 @unique
  ebServiceNo        String?                 @unique
  industryType       String?
  gstin              String?                 @unique
  documents          String[]
  encrypted_password String
  isApproved         Boolean                 @default(false)
  role               Int?                    @default(1)
  usedQRCodes        UsedQRCode[]
  qRCodes            QRCode[]
  products           Product[]
  Document           Document[]
  Asset              Asset[]
  isTrash            Boolean                 @default(false)
  createdAt          DateTime?               @default(now())
  updatedAt          DateTime?               @updatedAt
  PowerConsumption   PowerConsumption[]
  MonthlyPlan        MontlyConsumptionPlan[]
  Notification       Notification[]
}

model Product {
  id            Int          @id @default(autoincrement())
  productId     String       @unique
  title         String
  industryType  String
  packagingType String[]
  uom           String
  productCode   String       @default("")
  description   String?
  points        Float        @default(0)
  photo         String?
  user          User         @relation(fields: [userId], references: [id])
  userId        Int
  isApproved    Boolean      @default(false)
  qrCodes       QRCode[]
  UsedQRCode    UsedQRCode[]
  isTrash       Boolean      @default(false)
  createdAt     DateTime?    @default(now())
  updatedAt     DateTime?    @updatedAt
}

model QRCode {
  id         Int         @id @default(autoincrement())
  qrId       String      @unique
  callId     String      @default("")
  isTrash    Boolean     @default(false)
  user       User?       @relation(fields: [userId], references: [id])
  userId     Int?
  product    Product?    @relation(fields: [productId], references: [productId])
  productId  String?
  uomValue   Int?        @default(0)
  redeemed   Boolean?    @default(false)
  UsedQRCode UsedQRCode?
  createdAt  DateTime?   @default(now())
  updatedAt  DateTime?   @updatedAt
}

model UsedQRCode {
  id        Int       @id @default(autoincrement())
  redeemed  Boolean?  @default(true)
  createdAt DateTime? @default(now())
  isTrash   Boolean   @default(false)
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  qrCode    QRCode    @relation(fields: [qrId], references: [qrId])
  qrId      String    @unique
  product   Product?  @relation(fields: [productId], references: [productId])
  productId String?
}

model Document {
  id         Int       @id @default(autoincrement())
  docId      String    @unique
  title      String
  file       Bytes
  fileName   String
  uploadDate DateTime
  isApproved Boolean?  @default(false)
  isTrash    Boolean   @default(false)
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
}

model Asset {
  id                 Int       @id @default(autoincrement())
  assetId            String    @unique
  industryName       String?
  name               String
  locationNumber     String?
  sourceType         String
  serviceNo          String?
  noOfWtgs           Int?
  ownCaptive         String?
  dateOfCommisioning String?
  make               String?
  model              String?
  capacity           String?
  edc                String?
  feeder             String?
  substation         String?
  latitude           String?
  longitude          String?
  isTrash            Boolean   @default(false)
  user               User      @relation(fields: [userId], references: [id])
  userId             Int
  createdAt          DateTime? @default(now())
  updatedAt          DateTime? @updatedAt
}

model IndustryType {
  id             Int    @id @default(autoincrement())
  industryTypeId String @unique
  name           String
}

model SourceType {
  id           Int    @id @default(autoincrement())
  sourceTypeId String @unique
  name         String
}

model UOM {
  id    Int    @id @default(autoincrement())
  uomId String @unique
  name  String
}

model PackagingType {
  id              Int    @id @default(autoincrement())
  packagingTypeId String @unique
  name            String
}

model PowerConsumption {
  id                    Int       @id @default(autoincrement())
  month                 Int
  year                  Int
  date                  Int
  fullDate              DateTime
  totalConsumption      String
  totalGreenConsumption String
  ebBill                Bytes?
  user                  User      @relation(fields: [userId], references: [id])
  userId                Int
  isApproved            Boolean   @default(false)
  isTrash               Boolean   @default(false)
  createdAt             DateTime? @default(now())
  updatedAt             DateTime? @updatedAt
}

model MontlyConsumptionPlan {
  id                 Int      @id @default(autoincrement())
  monthlyPlanId      String
  month              Int
  year               Int
  date               Int
  fullDate           DateTime
  ownCaptive         Int?     @default(0)
  groupCaptive       Int?     @default(0)
  thirdPartyPurchase Int?     @default(0)
  total              Int?     @default(0)
  isApproved         Boolean  @default(false)
  isTrash            Boolean  @default(false)
  sourceType         String
  user               User     @relation(fields: [userId], references: [id])
  userId             Int
}

model Notification {
  id             Int      @id @default(autoincrement())
  notificationId String   @unique
  month          Int
  year           Int
  date           Int
  fullDate       DateTime
  text           String
  isTrash        Boolean  @default(false)
  user           User     @relation(fields: [userId], references: [id])
  userId         Int
}
